image:
  registry: gcr.io
  repository: authorizer-tech/access-controller
  tag: v0.1.1
  pullPolicy: IfNotPresent
  pullSecrets: []

nameOverride: ""
fullnameOverride: ""

# Cluster's default DNS domain.
# You should overwrite it if you're using a different one,
# otherwise node discovery won't work.
clusterDomain: cluster.local

conf:
  # The addresses for connecting nodes to an existing cluster. If you are
  # deploying a second access-controller cluster that should join a first
  # one, use the below list to join to the existing cluster.
  # Each item in the array should be a FQDN (and port if needed) resolvable by
  # new pods.
  join: []

statefulset:
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  budget:
    maxUnavailable: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

tls:
  enabled: false

service:
  ports:
    grpc:
      port: 50052
    gossip:
      port: 7946
    grpcGateway:
      port: 8082

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# @section HTTP/JSON to gRPC Transcoding Parameters
grpcGateway:
  ## @param grpcGateway.enabled Enabled HTTP/JSON to gRPC Transcoding and serve the HTTP server
  ##
  enabled: false

## @section Database Parameters
## ref: https://github.com/cockroachdb/helm-charts/blob/master/cockroachdb/values.yaml
#
cockroachdb:
  ## @param cockroachdb.enabled Deploy a CockroachDB database to satisfy the applications database requirements
  ## To use an externally provisioned CockroachDB database set this to false and configure the `externalDatabase.*`
  ## parameters.
  enabled: true

  ## @section Authentication configs for the CockroachDB database
  ##
  auth:
    ## @param The database username
    ##
    username: "admin"
    ## @param The database password for the user
    password: ""

## External Database Configurations
## All of these values are only used if `cockroachdb.enabled=false`
##
externalDatabase:
  ## @param externalDatabase.host The hostname of the database
  ##
  host: localhost
  ## @param externalDatabase.port The port the database is exposed on
  ##
  port: 26257
  ## @param externalDatabase.username The database username
  ##
  username: "admin"
  ## @param externalDatabase.password The database password for the user
  ##
  password: ""
  ## @param externalDatabase.database The database name
  ##
  database: "postgres"
  ## @param externalDatabase.existingSecret The name of an existing secret with database credentials
  ## NOTE: Must contain key `cockroachdb-password`
  ## NOTE: When this is set, the `externalDatabase.password` parameter is ignored
  ##
  existingSecret:
