{{- if .Values.watcher.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "authorizer.watcher.fullname" . }}
  labels:
    {{- include "authorizer.watcher.labels" . | nindent 4 }}
spec:
  {{- if not .Values.watcher.autoscaling.enabled }}
  replicas: {{ .Values.watcher.autoscaling.minReplicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "authorizer.watcher.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.watcher.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "authorizer.watcher.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.watcher.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "authorizer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.watcher.podSecurityContext | nindent 8 }}
      containers:
        - name: access-watcher
          securityContext:
            {{- toYaml .Values.watcher.securityContext | nindent 12 }}
          image: "{{ .Values.watcher.image.registry }}/{{ .Values.watcher.image.repository }}:{{ .Values.watcher.image.tag }}"
          imagePullPolicy: {{ .Values.watcher.image.pullPolicy }}
          args:
            - /bin/sh
            - "-ec"
            - |
              access-watcher --config=/etc/config/config.yaml \
              {{- if .Values.watcher.tls.enabled }}
              --certs-dir=/etc/certs/
              {{- end }}
          env:
            - name: POSTGRES_USERNAME
              value: {{ include "authorizer.databaseUsername" . | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "authorizer.databaseSecretName" . }}
                  key: cockroachdb-password
          ports:
            - containerPort: {{ .Values.watcher.service.ports.grpc.port }}
              protocol: TCP
              name: grpc
            {{- if .Values.watcher.grpcGateway.enabled }}
            - containerPort: {{ .Values.watcher.service.ports.grpcGateway.port }}
              protocol: TCP
              name: grpc-gateway
            {{- end }}
          resources:
            {{- toYaml .Values.watcher.resources | nindent 12 }}
          volumeMounts:
            - name: watcher-config
              mountPath: /etc/config
      initContainers:
      - name: init-access-controller
        image: "gcr.io/jon-whit/grpc-health-probe:v0.4.2"
        command: ['sh', '-c', 'until /bin/grpc_health_probe -addr={{ include "call-nested" (list . "access-controller" "access-controller.fullname") }}:50052; do sleep 2; done;']
      volumes:
        - name: watcher-config
          configMap:
            name: {{ include "authorizer.watcher.fullname" . }}-config
            items:
              - key: config.yaml
                path: config.yaml
      {{- with .Values.watcher.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.watcher.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.watcher.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}